version: '3.4'
services:

  llm-api:
    image: ghcr.io/bionic-gpt/llama-3-8b-chat:1.1.3
    platform: linux/amd64
    container_name: llm_api
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:7700 || exit 1"]
      interval: 10s
      retries: 5

  embeddings-api:
    image: ghcr.io/bionic-gpt/bionicgpt-embeddings-api:cpu-0.6
    platform: linux/amd64
    container_name: embeddings_api
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:7700 || exit 1"]
      interval: 10s
      retries: 5

  chunking-engine:
    image: downloads.unstructured.io/unstructured-io/unstructured-api:4ffd8bc
    container_name: chunking_engine
    restart: unless-stopped

  db:
    image: ankane/pgvector:v0.5.1
    container_name: postgres_db
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-testpassword}
      POSTGRES_USER: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data

  envoy:
    build: 
      context: .
      dockerfile: Dockerfile.envoy
    container_name: envoy_proxy
    ports:
      - "7700:7700"
      - "7701:7701"
    depends_on:
      - llm-api
      - embeddings-api
      - chunking-engine

  barricade:
    image: purtontech/barricade:1.2.10
    container_name: barricade_auth
    environment:
      SECRET_KEY: ${SECRET_KEY:-defaultsecretkey}
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-testpassword}@db:5432/postgres?sslmode=disable
      REDIRECT_URL: /app/post_registration
      USER_TABLE_NAME: barricade_users
    depends_on:
      db:
        condition: service_healthy

  selenium:
    image: selenium/standalone-chrome:4
    shm_size: 2gb
    container_name: selenium_chrome
    environment:
      VNC_NO_PASSWORD: 1
    ports:
      - 7705:5900
      - 7706:7900
    volumes:
      - ../crates/integration-testing/files:/workspace

  smtp:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025  # Port to access the MailHog web UI

  development:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: dev_container
    volumes:
      - ..:/workspace:cached
      - target:/workspace/target/
    environment:
      RUST_LOG: debug
      ENABLE_BARRICADE: 1
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-testpassword}@db:5432/postgres?sslmode=disable
      APP_DATABASE_URL: postgresql://bionic_application:${POSTGRES_PASSWORD:-testpassword}@db:5432/postgres?sslmode=disable
      SIGNOUT_URL: /auth/sign_out
      INVITE_DOMAIN: http://envoy:7700
      INVITE_FROM_EMAIL_ADDRESS: support@application.com
      SMTP_HOST: smtp
      SMTP_PORT: 1025
      SMTP_USERNAME: thisisnotused
      SMTP_PASSWORD: thisisnotused
      SMTP_TLS_OFF: 'true'
    command: tail -f /dev/null
    working_dir: /workspace
    depends_on:
      - db

volumes:
  target:
  node_modules:
  pg_data:
